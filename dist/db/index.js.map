{"version":3,"file":"index.js","names":["db","basename","path","__filename","env","process","NODE_ENV","sequelize","Sequelize","DB_DATABASE","DB_USERNAME","DB_PASSWORD","host","DB_HOST","port","DB_PORT","dialect","DB_DIALECT","schema","DB_SCHEMA","console","log","fs","readdirSync","join","__dirname","filter","file","indexOf","slice","forEach","model","import","name","user","belongsTo","org","belongsToMany","role","through","Object","keys","modelName","associate","constructResponse","data","error","count","length","getUser","request","q","where","query","include","findAll","then","res","getOrg","getRole","getUserRole","userrole","getArticle","article","addArticle","create","input","updateArticle","update","id","returning"],"sources":["../../src/db/index.js"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport Sequelize from \"sequelize\";\n\nconst db = {};\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || \"development\";\n\n// define the sequelize ORM instance and connect it to the db\nconst sequelize = new Sequelize(\n  process.env.DB_DATABASE,\n  process.env.DB_USERNAME,\n  process.env.DB_PASSWORD,\n  {\n    db: process.env.DB_DATABASE,\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    dialect: process.env.DB_DIALECT,\n    schema: process.env.DB_SCHEMA,\n  }\n);\nconsole.log(\n  `ðŸš€ sequelize ORM connected to ${process.env.DB_DIALECT} @ ${process.env.DB_HOST}:${process.env.DB_PORT}`\n);\n\n// loading all sequelize models from the 'models' folder\nfs.readdirSync(path.join(__dirname, \"./models\"))\n  .filter(\n    (file) =>\n      file.indexOf(\".\") !== 0 && file !== basename && file.slice(-3) === \".js\"\n  )\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, \"./models\", file));\n    db[model.name] = model;\n  });\n\n// define the relationships between the entities\ndb.user.belongsTo(db.org);\ndb.user.belongsToMany(db.role, { through: \"userrole\" });\ndb.role.belongsToMany(db.user, { through: \"userrole\" });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\n/**\n * constructResponse - constructs the API response payload\n *\n * containing the actual data, a count of records the data contains and an error object\n *\n * @param {INT} count\n * @param {ARRAY} data\n * @param {JSON} error\n */\nlet constructResponse = function (data, error) {\n  return {\n    count: data ? data.length : 0,\n    data: data,\n    error: error ? (error.name ? error.name : error) : null,\n  };\n};\n\n/**\n * getUser - queries for currencies based on a given query\n *\n * @param  {JSON} query JSON structure holding the query arguments\n * @return {JSON}       output object containing the actual results (data), the result count and error\n */\ndb.getUser = async (request) => {\n  console.log(\"getUser called\");\n  let q = {\n    where: request.query,\n    include: [\n      {\n        model: db.org,\n      },\n      {\n        model: db.role,\n      },\n    ],\n  };\n  return db.user.findAll(q).then((res) => constructResponse(res));\n};\n\n/**\n * getOrg - queries for countries based on a given query\n *\n * @param  {JSON} query JSON structure holding the query arguments\n * @return {JSON}       output object containing the actual results (data), the result count and error\n */\ndb.getOrg = async (request) => {\n  console.log(\"getOrg called\", request.query);\n  let q = { where: request.query };\n  return db.org.findAll(q).then((res) => constructResponse(res));\n};\n\n/**\n * getRole - queries for countries based on a given query\n *\n * @param  {JSON} query JSON structure holding the query arguments\n * @return {JSON}       output object containing the actual results (data), the result count and error\n */\ndb.getRole = async (request) => {\n  let q = { where: request.query };\n  return db.role.findAll(q).then((res) => constructResponse(res));\n};\n\n/**\n * getUserRole - queries for userroles based on a given query\n *\n * @param  {JSON} query JSON structure holding the query arguments\n * @return {JSON}       output object containing the actual results (data), the result count and error\n */\ndb.getUserRole = async (request) => {\n  let q = { where: request.query };\n  return db.userrole.findAll(q).then((res) => constructResponse(res));\n};\n/**\n *\n * @param {JSON} request\n * @returns\n */\n\ndb.getArticle = async (request) => {\n  let q = { where: request.query };\n  console.log(q);\n  return db.article.findAll(q).then((res) => constructResponse(res));\n};\ndb.addArticle = async (request) => {\n  return db.article.create(request.input).then((res) => constructResponse(res));\n};\ndb.updateArticle = async (request) => {\n  let data = await db.article.update(request.input, {\n    where: { id: request.input.id },\n    returning: true,\n  });\n  return data;\n};\n\nexport default db;\n"],"mappings":"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"}